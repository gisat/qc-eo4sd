How to run tests
----------------

Run container with postgis service:

docker run --rm \
 --interactive --tty \
 --publish 5432:5432 \
 --name=qc_tool_postgis \
 --user=postgres \
 eeacms/copernicus-qctool-worker \
 /usr/lib/postgresql/11/bin/postgres -D /var/lib/postgresql/11/main -c config_file=/etc/postgresql/11/main/postgresql.conf

Switch to other terminal.

Setup EO_HOME to your development source files, eg.

EO_HOME=/home/igor/projects/qc-eo4sd

Run the tests:

docker run --rm \
  --interactive --tty \
  --name=qc_tool_test \
  --link=qc_tool_postgis \
  --env=PG_HOST=qc_tool_postgis \
  --env=SKIP_INSPIRE_CHECK=yes \
  --env=PYTHONPATH=/usr/local/src/copernicus_quality_tools/src:/usr/local/src/qc-eo4sd/src \
  --volume=$EO_HOME:/usr/local/src/qc-eo4sd \
  eeacms/copernicus-qctool-worker \
  python3 -m unittest eo4sd.test.test_vector_check


Testing together with qc_tool
-----------------------------

Sometimes it is needed to test the tool together with qc_tool while both are in development branch.
In such case it is needed to override qc_tool sources in the container by actual development sources.
This may be done by docker bind mount.

Set the QC_TOOL_HOME in the same terminal where EO_HOME is set:

QC_TOOL_HOME=/home/igor/projects/copernicus_quality_tools

Run the tests:

docker run --rm \
  --interactive --tty \
  --name=qc_tool_test \
  --link=qc_tool_postgis \
  --env=PG_HOST=qc_tool_postgis \
  --env=SKIP_INSPIRE_CHECK=yes \
  --env=PYTHONPATH=/usr/local/src/copernicus_quality_tools/src:/usr/local/src/qc-eo4sd/src \
  --volume=$EO_HOME:/usr/local/src/qc-eo4sd \
  --volume=$QC_TOOL_HOME:/usr/local/src/copernicus_quality_tools \
  eeacms/copernicus-qctool-worker \
  python3 -m unittest eo4sd.test.test_vector_check
